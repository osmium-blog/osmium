diff --git a/build/index.js b/build/index.js
index a18bcfde162936c6f9c95c1387369d9bb43b5fff..f6b7c4ad799ea7c78c237a77f0bb578c1f2eb74a 100644
--- a/build/index.js
+++ b/build/index.js
@@ -2270,12 +2270,12 @@ var Block = (props) => {
         className: cs("notion-hr", blockId)
       });
     case "text": {
+      const blockColor = (_i = block.format) == null ? void 0 : _i.block_color;
       if (!block.properties && !((_h = block.content) == null ? void 0 : _h.length)) {
         return /* @__PURE__ */ React28.createElement("div", {
-          className: cs("notion-blank", blockId)
+          className: cs("notion-blank", blockColor && `notion-${blockColor}`, blockId)
         }, "\xA0");
       }
-      const blockColor = (_i = block.format) == null ? void 0 : _i.block_color;
       return /* @__PURE__ */ React28.createElement("div", {
         className: cs(
           "notion-text",
@@ -2606,6 +2606,9 @@ var Block = (props) => {
         className: blockId
       });
     default:
+      if (components[block.type]) {
+        return /* @__PURE__ */ React28.createElement(components[block.type], { block }, children)
+      }
       if (true) {
         console.log(
           "Unsupported type " + block.type,
diff --git a/build/third-party/equation.js b/build/third-party/equation.js
index 3a41f237f74ec4cecc26c853c45283710b2908ab..3fdaf22d01cd5e41be239cc1a52c69601bebdf2e 100644
--- a/build/third-party/equation.js
+++ b/build/third-party/equation.js
@@ -1771,7 +1771,7 @@ var Equation = (_a) => {
     )
   }, /* @__PURE__ */ React21.createElement(Katex, __spreadValues({
     math,
-    settings: katexSettings
+    settings: { ...katexSettings, displayMode: !inline }
   }, rest)));
 };
 export {